name: Rust

on:
  - push
  - pull_request

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: rustfmt
    - name: Check code format
      run: cargo fmt --all -- --check
  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-toolchain:
          - stable
          - beta
          - nightly
        feature:
          - ""
          - "memchr"
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Rust ${{ matrix.rust-toolchain }}
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: rustfmt
    - name: Test with ${{ matrix.feature }} feature
      run: cargo test --no-default-features --features "${{ matrix.feature }}" -- --test-threads=1
  cover:
    name: Coverage
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        feature:
        - ""
        - "memchr"
    if: "!startsWith(github.ref, 'refs/tags/v')"
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: rustfmt
    - name: Install tarpaulin
      run: cargo install cargo-tarpaulin
    - name: Measure code coverage with ${{ matrix.feature }} feature
      run: cargo tarpaulin -v --out Xml --ciserver github-actions --no-default-features --features "${{ matrix.feature }}" -- --test-threads=1
    - name: Upload coverage statistics
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: ${{ matrix.feature }}
  publish:
    needs: test
    runs-on: ubuntu-latest
    environment: Crates.io
    if: "startsWith(github.ref, 'refs/tags/v')"
    name: Publish
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Rust ${{ matrix.rust-toolchain }}
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: rustfmt
    - name: Package and publish base crate
      run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }} -p diced
    - name: Package and publish Python crate
      run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }} -p diced-py
  release:
    environment: GitHub Releases
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/v')"
    name: Release
    needs: publish
    permissions: write-all
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: Release a Changelog
      uses: rasmus-saks/release-a-changelog-action@v1.2.0
      with:
        github-token: '${{ secrets.GITHUB_TOKEN }}'
